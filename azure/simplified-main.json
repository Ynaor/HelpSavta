{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "18381545975948094827"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "production",
      "metadata": {
        "description": "Environment name (production)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "postgresAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "PostgreSQL server admin username"
      }
    },
    "postgresAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "PostgreSQL server admin password"
      }
    },
    "githubRepoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/your-org/HelpSavta",
      "metadata": {
        "description": "GitHub repository URL"
      }
    },
    "githubBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "GitHub branch for deployment"
      }
    }
  },
  "variables": {
    "appName": "[format('helpsavta-{0}', parameters('environment'))]"
  },
  "resources": {
    "keyVault": {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-kv', variables('appName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    "postgresServer": {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2022-12-01",
      "name": "[format('{0}-db', variables('appName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable"
      },
      "properties": {
        "administratorLogin": "[parameters('postgresAdminUsername')]",
        "administratorLoginPassword": "[parameters('postgresAdminPassword')]",
        "storage": {
          "storageSizeGB": 32
        },
        "backup": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "version": "15",
        "highAvailability": {
          "mode": "Disabled"
        }
      }
    },
    "postgresDatabase": {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2022-12-01",
      "name": "[format('{0}/{1}', format('{0}-db', variables('appName')), 'helpsavta')]",
      "properties": {
        "charset": "utf8",
        "collation": "en_US.utf8"
      },
      "dependsOn": [
        "postgresServer"
      ]
    },
    "postgresFirewallRule": {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
      "apiVersion": "2022-12-01",
      "name": "[format('{0}/{1}', format('{0}-db', variables('appName')), 'AllowAzureServices')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "postgresServer"
      ]
    },
    "containerAppsEnv": {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-env', variables('appName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference('logAnalytics').customerId]",
            "sharedKey": "[listKeys('logAnalytics', '2022-10-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "logAnalytics"
      ]
    },
    "logAnalytics": {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[format('{0}-logs', variables('appName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    "backendApp": {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-backend', variables('appName'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format('{0}-env', variables('appName')))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 3001,
            "allowInsecure": false,
            "traffic": [
              {
                "weight": 100,
                "latestRevision": true
              }
            ]
          },
          "secrets": [
            {
              "name": "database-url",
              "value": "[format('postgresql://{0}:{1}@{2}:5432/helpsavta?sslmode=require', parameters('postgresAdminUsername'), parameters('postgresAdminPassword'), reference('postgresServer').fullyQualifiedDomainName)]"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "name": "helpsavta-backend",
              "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
              "resources": {
                "cpu": "[json('0.25')]",
                "memory": "0.5Gi"
              },
              "env": [
                {
                  "name": "NODE_ENV",
                  "value": "[parameters('environment')]"
                },
                {
                  "name": "PORT",
                  "value": "3001"
                },
                {
                  "name": "DATABASE_URL",
                  "secretRef": "database-url"
                },
                {
                  "name": "SENDGRID_API_KEY",
                  "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/sendgrid-api-key/)', reference('keyVault').vaultUri)]"
                },
                {
                  "name": "SESSION_SECRET",
                  "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/session-secret/)', reference('keyVault').vaultUri)]"
                },
                {
                  "name": "DEFAULT_ADMIN_USERNAME",
                  "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/admin-username/)', reference('keyVault').vaultUri)]"
                },
                {
                  "name": "DEFAULT_ADMIN_PASSWORD",
                  "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/admin-password/)', reference('keyVault').vaultUri)]"
                },
                {
                  "name": "EMAIL_FROM",
                  "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/email-from/)', reference('keyVault').vaultUri)]"
                },
                {
                  "name": "EMAIL_FROM_NAME",
                  "value": "Help Savta"
                },
                {
                  "name": "EMAIL_REPLY_TO",
                  "value": "support@helpsavta.com"
                },
                {
                  "name": "SUPPORT_EMAIL",
                  "value": "support@helpsavta.com"
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 0,
            "maxReplicas": 3,
            "rules": [
              {
                "name": "http-rule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "10"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "containerAppsEnv",
        "keyVault",
        "postgresServer"
      ]
    },
    "staticWebApp": {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-frontend', variables('appName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "[parameters('githubRepoUrl')]",
        "branch": "[parameters('githubBranch')]",
        "buildProperties": {
          "appLocation": "/frontend",
          "outputLocation": "dist",
          "appBuildCommand": "npm run build"
        },
        "stagingEnvironmentPolicy": "Enabled"
      }
    },
    "keyVaultAccessPolicy": {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', format('{0}-kv', variables('appName')), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference('backendApp', '2023-05-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "backendApp",
        "keyVault"
      ]
    }
  },
  "outputs": {
    "backendAppName": {
      "type": "string",
      "value": "[format('{0}-backend', variables('appName'))]"
    },
    "backendAppUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference('backendApp').configuration.ingress.fqdn)]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[format('{0}-frontend', variables('appName'))]"
    },
    "staticWebAppUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference('staticWebApp').defaultHostname)]"
    },
    "postgresServerName": {
      "type": "string",
      "value": "[format('{0}-db', variables('appName'))]"
    },
    "postgresDatabaseName": {
      "type": "string",
      "value": "helpsavta"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[format('{0}-kv', variables('appName'))]"
    },
    "containerAppsEnvironmentName": {
      "type": "string",
      "value": "[format('{0}-env', variables('appName'))]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[format('{0}-logs', variables('appName'))]"
    },
    "staticWebAppsApiToken": {
      "type": "string",
      "value": "[listSecrets('staticWebApp', '2022-09-01').properties.apiKey]"
    }
  }
}