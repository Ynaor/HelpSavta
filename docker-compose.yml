# Docker Compose for Local Development
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: helpsavta-postgres-dev
    environment:
      POSTGRES_DB: helpsavta
      POSTGRES_USER: helpsavta
      POSTGRES_PASSWORD: helpsavta_dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db-minimal.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U helpsavta -d helpsavta"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - helpsavta-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: helpsavta-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - helpsavta-network
    command: redis-server --appendonly yes --requirepass redis_dev_password

  # Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: helpsavta-backend-dev
    environment:
      NODE_ENV: development
      PORT: 3001
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://helpsavta:helpsavta_dev_password@postgres:5432/helpsavta
      REDIS_URL: redis://:redis_dev_password@redis:6379
      SESSION_SECRET: development_session_secret_key_min_32_chars_for_docker
      SESSION_MAX_AGE: 86400000
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      FRONTEND_URL: http://localhost:3000
      # Admin settings
      DEFAULT_ADMIN_USERNAME: admin
      DEFAULT_ADMIN_PASSWORD: admin123dev
      # Email settings for development
      EMAIL_HOST: smtp.ethereal.email
      EMAIL_PORT: 587
      EMAIL_SECURE: false
      EMAIL_USER: ethereal.user@ethereal.email
      EMAIL_PASS: ethereal.pass
      EMAIL_FROM: noreply@helpsavta-dev.com
      # Logging and health check
      LOG_LEVEL: info
      HEALTH_CHECK_PATH: /health
      # Database pool settings
      DB_POOL_MIN: 2
      DB_POOL_MAX: 20
      DB_POOL_ACQUIRE_TIMEOUT: 60000
      DB_POOL_IDLE_TIMEOUT: 10000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
      - ./backend/prisma:/app/prisma
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - helpsavta-network
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: helpsavta-frontend-dev
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: http://localhost:3001/api
      VITE_APP_TITLE: HelpSavta - Development
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - helpsavta-network
    restart: unless-stopped

  # pgAdmin for Database Management (Development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: helpsavta-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@helpsavta-dev.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - helpsavta-network
    profiles:
      - tools

  # Redis Commander for Cache Management (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: helpsavta-redis-commander-dev
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_dev_password
      HTTP_USER: admin
      HTTP_PASSWORD: redis123
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - helpsavta-network
    profiles:
      - tools

  # Mailhog for Email Testing (Development only)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: helpsavta-mailhog-dev
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - helpsavta-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  helpsavta-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16