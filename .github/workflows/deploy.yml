name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

permissions:
  contents: read
  actions: read
  security-events: write

env:
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Build backend
        working-directory: backend
        run: npm run build

      - name: Generate Prisma client
        working-directory: backend
        run: npx prisma generate

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.AZURE_CONTAINER_REGISTRY }}/helpsavta-backend:${{ github.sha }}
            ${{ secrets.AZURE_CONTAINER_REGISTRY }}/helpsavta-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: helpsavta-${{ github.event.inputs.environment || 'staging' }}-backend
          slot-name: ${{ github.event.inputs.environment == 'production' && 'production' || 'staging' }}
          images: ${{ secrets.AZURE_CONTAINER_REGISTRY }}/helpsavta-backend:${{ github.sha }}

      - name: Run database migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          cd backend
          npx prisma migrate deploy

      - name: Health check
        run: |
          sleep 30
          curl -f ${{ secrets.AZURE_APP_URL }}/health || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "Deployment to ${{ github.event.inputs.environment || 'staging' }} successful!"
          echo "Application URL: ${{ secrets.AZURE_APP_URL }}"

      - name: Cleanup old images
        if: success()
        run: |
          # Keep only the 10 most recent images
          az acr repository show-tags --name ${{ secrets.AZURE_CONTAINER_REGISTRY }} --repository helpsavta-backend --orderby time_desc --output tsv | tail -n +11 | xargs -I {} az acr repository delete --name ${{ secrets.AZURE_CONTAINER_REGISTRY }} --image helpsavta-backend:{} --yes || true