name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Frontend CI
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint frontend
        working-directory: frontend
        run: npm run lint

      - name: Run frontend tests
        working-directory: frontend
        run: npm run test:run

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      # Backend CI
      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Generate Prisma client
        working-directory: backend
        run: npx prisma generate

      - name: Build backend
        working-directory: backend
        run: npm run build

      - name: Run backend tests
        working-directory: backend
        run: npm run test

      # Save build artifacts for deployment
      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/
          retention-days: 1

      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: |
            backend/dist/
            backend/node_modules/.prisma/
            backend/package*.json
            backend/prisma/
          retention-days: 1

      - name: Upload Docker context
        uses: actions/upload-artifact@v4
        with:
          name: docker-context
          path: |
            Dockerfile
            docker-compose.production.yml
            start.sh
          retention-days: 1

      - name: CI Success
        run: echo "✅ CI pipeline completed successfully - all tests passed"

  # Require all tests to pass for PR approval
  check-ci:
    name: Check CI Status
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - name: CI Status Check
        run: |
          echo "✅ All CI checks passed"
          echo "This job ensures tests must pass before PR can be approved"