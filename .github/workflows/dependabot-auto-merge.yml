name: Dependabot Auto-merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  dependabot-auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get dependabot metadata
      id: metadata
      uses: dependabot/fetch-metadata@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Wait for CI checks
      uses: lewagon/wait-on-check-action@v1.3.1
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        check-name: 'Backend Tests'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 10

    - name: Wait for security checks
      uses: lewagon/wait-on-check-action@v1.3.1
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        check-name: 'Dependency Security Scan'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 10

    - name: Auto-approve patch and minor updates
      if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'
      run: |
        echo "Auto-approving ${{ steps.metadata.outputs.update-type }} update"
        gh pr review --approve "${{ github.event.pull_request.number }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Auto-merge patch updates
      if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
      run: |
        echo "Auto-merging patch update"
        gh pr merge --auto --merge "${{ github.event.pull_request.number }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment on major updates
      if: steps.metadata.outputs.update-type == 'version-update:semver-major'
      run: |
        gh pr comment "${{ github.event.pull_request.number }}" --body "ðŸš¨ **Major version update detected!** Please review this PR manually before merging."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}